{
    "CallOf": "Call",
    "DispatchTime": {
        "_enum": {
            "At": "BlockNumber",
            "After": "BlockNumber"
        }
    },
    "ScheduleTaskIndex": "u32",
    "DelayedOrigin": {
        "delay": "BlockNumber",
        "origin": "PalletsOrigin"
    },
    "AuthorityOrigin": "DelayedOrigin",
    "StorageValue": "Vec<u8>",
    "GraduallyUpdate": {
        "key": "StorageKey",
        "targetValue": "StorageValue",
        "perBlock": "StorageValue"
    },
    "StorageKeyBytes": "Vec<u8>",
    "StorageValueBytes": "Vec<u8>",
    "RpcDataProviderId": "Text",
    "DataProviderId": "u8",
    "TimestampedValue": {
        "value": "OracleValue",
        "timestamp": "Moment"
    },
    "TimestampedValueOf": "TimestampedValue",
    "OrderedSet": "Vec<AccountId>",
    "OrmlAccountData": {
        "free": "Balance",
        "frozen": "Balance",
        "reserved": "Balance"
    },
    "OrmlBalanceLock": {
        "amount": "Balance",
        "id": "LockIdentifier"
    },
    "AuctionInfo": {
        "bid": "Option<(AccountId, Balance)>",
        "start": "BlockNumber",
        "end": "Option<BlockNumber>"
    },
    "DelayedDispatchTime": {
        "_enum": {
            "At": "BlockNumber",
            "After": "BlockNumber"
        }
    },
    "DispatchId": "u32",
    "Price": "FixedU128",
    "OrmlVestingSchedule": {
        "start": "BlockNumber",
        "period": "BlockNumber",
        "periodCount": "u32",
        "perPeriod": "Compact<Balance>"
    },
    "VestingScheduleOf": "OrmlVestingSchedule",
    "PoolInfo": {
        "totalShares": "Compact<Share>",
        "totalRewards": "Compact<Balance>",
        "totalWithdrawnRewards": "Compact<Balance>"
    },
    "Share": "u128",
    "OracleValue": "Price",
    "Deposits": {
        "voucherBalance": "Balance",
        "isCollateral": "bool"
    },
    "BorrowSnapshot": {
        "principal": "Balance",
        "borrowIndex": "u128"
    },
    "EarnedSnapshot": {
        "totalEarnedPrior": "Balance",
        "exchangeRatePrior": "u128"
    },
    "JumpModel": {
        "baseRate": "Rate",
        "jumpRate": "Rate",
        "fullRate": "Rate",
        "jumpUtilization": "Ratio"
    },
    "CurveModel": {
        "baseRate": "Rate"
    },
    "InterestRateModel": {
        "_enum": {
            "JumpModel": "JumpModel",
            "CurveModel": "CurveModel"
        }
    },
    "Market": {
        "collateralFactor": "Ratio",
        "reserveFactor": "Ratio",
        "closeFactor": "Ratio",
        "liquidateIncentive": "Rate",
        "rateModel": "InterestRateModel",
        "state": "MarketState"
    },
    "MarketState": {
        "_enum": [
            "Active",
            "Pending",
            "Supervision"
        ]
    },
    "Liquidity": "FixedU128",
    "Shortfall": "FixedU128",
    "ValidatorInfo": {
        "name": "Option<Text>",
        "address": "AccountId",
        "stakes": "u128",
        "score": "u128"
    },
    "ValidatorSet": "Vec<ValidatorInfo>",
    "UnstakeInfo": {
        "amount": "Balance",
        "blockNumber": "u32",
        "eraIndex": "Option<u32>"
    },
    "StakingSettlementKind": {
        "_enum": [
            "Reward",
            "Slash"
        ]
    },
    "MatchingLedger": {
        "totalStakeAmount": "Balance",
        "totalUnstakeAmount": "Balance"
    },
    "SwapType": {
        "_enum": [
            "Buy",
            "Sell"
        ]
    },
    "AmountEvaluation": {
        "accountAmount": "Balance",
        "poolAmount": "Balance"
    },
    "PoolLiquidityAmount": {
        "baseAmount": "Balance",
        "quoteAmount": "Balance",
        "ownership": "Balance"
    },
    "Amount": "i128",
    "AmountOf": "Amount",
    "Rate": "FixedU128",
    "Ratio": "Permill",
    "Timestamp": "u64",
    "PriceDetail": "(Price, Timestamp)",
    "CurrencyId": {
        "_enum": [
            "DOT",
            "KSM",
            "USDT",
            "xDOT",
            "xKSM",
            "HKO",
            "PARA"
        ]
    },
    "CurrencyIdOf": "CurrencyId",
    "Currency": "CurrencyId",
    "AssetIdOf": "AssetId",
    "OracleKey": "AssetId"
}